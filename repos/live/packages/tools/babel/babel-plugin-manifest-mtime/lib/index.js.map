{"version":3,"sources":["../src/index.js"],"names":["debug","cache","t","types","visitor","Program","path","state","post","isRunningBabelRegister","root","opts","filename","mTime","fs","statSync","mtimeMs","manifestFile","getManifestPath","rootRelFilename","relative","manifestKey","writeManifest","manifestPath","writeFileSync","JSON","stringify","caller","name"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;AACA,IAAMA,KAAK,GAAG,uBAAM,sBAAN,CAAd,C,CAEA;;AACA,IAAMC,KAAK,GAAG,EAAd;;AAEe,wBAAqB;AAAA,MAAJC,CAAI,QAAXC,KAAW;AAElC,MAAMC,OAAO,GAAG;AACdC,IAAAA,OADc,mBACNC,IADM,EACAC,KADA,EACO,CACnB;AACA;AACD;AAJa,GAAhB;AAOA,SAAO;AACLH,IAAAA,OAAO,EAAPA,OADK;AAELI,IAAAA,IAFK,gBAEAD,KAFA,EAEO;AACV,UAAIE,sBAAsB,CAACF,KAAD,CAA1B,EAAmC;AACnC,UAAMG,IAAI,GAAGH,KAAK,CAACI,IAAN,CAAWD,IAAxB;AACA,UAAME,QAAQ,GAAGL,KAAK,CAACI,IAAN,CAAWC,QAA5B,CAHU,CAIV;;AACA,UAAMC,KAAK,GAAGC,eAAGC,QAAH,CAAYH,QAAZ,EAAsBI,OAApC;;AAEA,UAAMC,YAAY,GAAGC,eAAe,CAACR,IAAD,CAApC,CAPU,CASV;;AACA,UAAMS,eAAe,GAAGb,iBAAKc,QAAL,CAAcV,IAAd,EAAoBE,QAApB,CAAxB,CAVU,CAWV;AACA;;;AAEA,UAAMS,WAAW,GAAGF,eAApB;AAEAlB,MAAAA,KAAK,CAACoB,WAAD,CAAL,GAAqBR,KAArB;AACAS,MAAAA,aAAa,CAACL,YAAD,CAAb;AACD;AApBI,GAAP;AAsBD,C,CAED;AACA;AACA;AACA;AAEA;;;AACA,SAASC,eAAT,CAAyBR,IAAzB,EAA+B;AAC7B,MAAMa,YAAY,GAAG,yBAArB;AACA,MAAMN,YAAY,GAAG,gBAAKP,IAAL,EAAWa,YAAX,CAArB;AACA,SAAON,YAAP;AACD;;AAED,SAASK,aAAT,CAAuBL,YAAvB,EAAqC;AACnCH,iBAAGU,aAAH,CAAiBP,YAAjB,EAA+BQ,IAAI,CAACC,SAAL,CAAezB,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAA/B,EADmC,CAEnC;AACA;;AACD,C,CAED;AACA;AACA;;;AACA,SAASQ,sBAAT,CAAgCF,KAAhC,EAAuC;AACrC,SAAOA,KAAK,CAACI,IAAN,CAAWgB,MAAX,IAAqBpB,KAAK,CAACI,IAAN,CAAWgB,MAAX,CAAkBC,IAAlB,KAA2B,iBAAvD;AACD","sourcesContent":["import Debug from 'debug'\nimport fs from 'fs'\nimport path, {join} from 'path'\nconst debug = Debug('babel-plugin-example')\n\n//let root = null\nconst cache = {}\n\nexport default function({types: t}) {\n\n  const visitor = {\n    Program(path, state) {\n      //const isProd = process.env.NODE_ENV === 'production'\n      //state.opts.foo = state.opts.foo || !isProd\n    },\n  }\n\n  return {\n    visitor,\n    post(state) {\n      if (isRunningBabelRegister(state)) return\n      const root = state.opts.root\n      const filename = state.opts.filename\n      // TODO(vjpr): filename is untranspiled source file - we need transpiled location!\n      const mTime = fs.statSync(filename).mtimeMs\n\n      const manifestFile = getManifestPath(root)\n\n      // TODO(vjpr): This must be synced with `transpile-checker`.\n      const rootRelFilename = path.relative(root, filename)\n      //const manifestRelFilename = path.relative(path.dirname(manifestFile), filename)\n      //const rootRelOutputPath = join(root, 'lib'...\n\n      const manifestKey = rootRelFilename\n\n      cache[manifestKey] = mTime\n      writeManifest(manifestFile)\n    },\n  }\n}\n\n// NOTE: Doesn't work.\n//process.on('exit', () => {\n//  writeManifest()\n//})\n\n// TODO(vjpr): Sync with `transpile-checker`.\nfunction getManifestPath(root) {\n  const manifestPath = 'lib/babel-manifest.json'\n  const manifestFile = join(root, manifestPath)\n  return manifestFile\n}\n\nfunction writeManifest(manifestFile) {\n  fs.writeFileSync(manifestFile, JSON.stringify(cache, null, 2))\n  //console.log('Writing to', manifestFile)\n  //console.log({cache})\n}\n\n// Test using `BABEL_DISABLE_CACHE=1 a-cli-tool`.\n// We don't want this to run when using @babel/register.\n//   When using babel/register, babel-core and presets will already be loaded defeating the purpose of precompiling.\nfunction isRunningBabelRegister(state) {\n  return state.opts.caller && state.opts.caller.name === '@babel/register'\n}\n"],"file":"index.js"}